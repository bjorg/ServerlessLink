service: serverlesslink

provider:
  name: aws
  runtime: java8
  profile: ${opt:profile, 'default'}
  timeout: 30
  versionFunctions: false
  memorySize: 512


  # you can overwrite defaults here
  stage: dev
  region: us-east-1

  # you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
  - Effect: "Allow"
    Action:
      - sns:Publish
    Resource:
      - "arn:aws:sns:*:*:${self:custom.stageName}-error-topic"
  - Effect: Allow
    Action:
      - dynamodb:PutItem
      - dynamodb:GetItem
      - dynamodb:Query
    Resource:
      - Fn::GetAtt: [ DynamoDBTable, Arn ]
      - Fn::Join: ["/", [ Fn::GetAtt: [DynamoDBTable, Arn], "index", "*"]]
  # you can define service wide environment variables here
  environment:
    STAGE_NAME: ${self:custom.stageName}
    CORS_SITES: "http://${opt:domain},https://${opt:domain}"
    LOG_EMAIL: false
    SNS_ERROR_TOPIC:
      Fn::Join: [':', ["arn:aws:sns", Ref: "AWS::Region", Ref: "AWS::AccountId","${self:custom.stageName}-error-topic"]]

# Custom values. These can be referenced in the Cloud Formation template
custom:
  stageName: ${opt:stage, self:provider.stage}

# you can add packaging information here
# Make sure to run "sbt assembly" to create a jar file
# with all your dependencies and put that jar file name here.
package:
  artifact: target/scala-2.12/app.jar

functions:
  serverlesslink-resolve:
    handler: io.onema.serverlesslink.resolve.ResolveFunction::lambdaHandler
    environment:
      TABLE_NAME:
        Ref: TableName

    events:
      - http:
          path: /{id}
          method: get
      - schedule:
          rate: rate(10 minutes)
          input:
            warmup: true

  serverlesslink-create:
    handler: io.onema.serverlesslink.create.CreateFunction::lambdaHandler
    environment:
      TABLE_NAME:
        Ref: TableName

    events:
      - http:
          path: /
          method: post
          cors: true
      - schedule:
          rate: rate(10 minutes)
          input:
            warmup: true

# you can add CloudFormation resource templates here
resources:
  Parameters: ${file(infrastructure/mapping-table_cfn.yml):Parameters}
  Resources: ${file(infrastructure/mapping-table_cfn.yml):Resources}